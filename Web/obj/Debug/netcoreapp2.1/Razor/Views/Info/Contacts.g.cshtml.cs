#pragma checksum "C:\Users\omarf\Desktop\youit-master\youit-master\Web\Views\Info\Contacts.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d83a0df421b34c0731266e50f1b4e7ae38a61384"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Info_Contacts), @"mvc.1.0.view", @"/Views/Info/Contacts.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Info/Contacts.cshtml", typeof(AspNetCore.Views_Info_Contacts))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\omarf\Desktop\youit-master\youit-master\Web\Views\_ViewImports.cshtml"
using Web;

#line default
#line hidden
#line 2 "C:\Users\omarf\Desktop\youit-master\youit-master\Web\Views\_ViewImports.cshtml"
using Web.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d83a0df421b34c0731266e50f1b4e7ae38a61384", @"/Views/Info/Contacts.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"243bef8901b38e9eef9e38f8c66b8f401f171c9b", @"/Views/_ViewImports.cshtml")]
    public class Views_Info_Contacts : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2284, true);
            WriteLiteral(@"<div class=""box full-post"">
    <h1>Контакты</h1>

    <p>
        Свяжитесь с нами, воспользовавшись нашим электронным адресом
        <a href=""mailto: admin@youit.pro"" style=""color:#092592; font-weight:bold;"">admin@youit.pro</a>
        или специальной контактной формой ниже.
    </p>

    <div class=""pure-form"">
        <fieldset>
            <p>
                <input id=""name"" type=""text"" placeholder=""Имя"" style=""width:100%;"" required />
            </p>
            <p>
                <input id=""email"" type=""email"" style=""width:100%;"" placeholder=""Email"" required />
            </p>
            <p>
                <input id=""subject"" type=""text"" placeholder=""Тема"" style=""width:100%;"" required />
            </p>
            <textarea id=""text"" class=""pure-input-1"" placeholder=""Сообщение"" rows=""5"" required></textarea>
            <span style=""font-size:11px; color:#ff0000;"">* все поля обязательны для заполнения</span>
            <p>
                <button class=""pure-button pure-button-primary"" onclick");
            WriteLiteral(@"=""send();"">Отправить</button>
            </p>

            <div id=""successModal"" class=""modal"">
                <p>Спасибо!</p>
                <p>Ваше сообщение успешно отправлено. Мы ответим вам в течение 24 часов.</p>
            </div>

            <script>
                send = () => {
                    const name = $('#name').val(), email = $('#email').val(), subject = $('#subject').val(), text = $('#text').val();
                    if (!name || !email || !subject || !text) return;

                    $.ajax({
                        url: '/info/sendmessage',
                        type: 'POST',
                        contentType: ""application/json"",
                        data: JSON.stringify({ Subject: subject, Name: name, Mail: email, Text: text }),
                        success: (data) => {
                            $('#successModal').modal('show');
                            $('#name').val('');
                            $('#email').val('');
                            $('#subject')");
            WriteLiteral(".val(\'\');\n                            $(\'#text\').val(\'\');\n                        },\n                        error: (error) => { }\n                    });\n                }\n\n\n            </script>\n\n        </fieldset>\n    </div>\n\n</div>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
